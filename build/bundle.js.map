{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/props.js","../../src/lang/tr.js","../../src/lang/en.js","../../src/lang.js","../../src/Player.js","../../src/Block.js","../../src/Timer.js","../../src/Text.js","../../src/Playground.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value' || descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j];\n                if (attributes[attribute.name]) {\n                    j++;\n                }\n                else {\n                    node.removeAttribute(attribute.name);\n                }\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    let unsubscribe;\n    if (is_crossorigin()) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        detach(iframe);\n        if (unsubscribe)\n            unsubscribe();\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next, lookup.has(block.key));\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.22.2' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { getContext, onMount, onDestroy } from 'svelte';\r\nimport { writable, derived } from 'svelte/store'\r\n\r\n// Some props for the app\r\nexport const gameLang = writable('tr')\r\nexport const pixelRatio = writable(window.devicePixelRatio)\r\nexport const score = writable(0)\r\nexport const blocks = writable({})\r\nexport const gameWidth = writable(window.innerWidth * 0.7);\r\nexport const gameHeight = writable(window.innerHeight * 0.7);\r\nexport const volumeCoefficient = writable(1000);\r\nexport const sensitivity = writable(1);\r\nexport const playerRadius = derived(gameWidth, $gameWidth => {\r\n\treturn $gameWidth / 50\r\n})\r\n\r\nexport const gameOverTrack = () => {\r\n\treturn new Audio('game_over.wav')\r\n};\r\n\r\nexport const canShare = () => {\r\n\treturn !!(navigator.share);\r\n}\r\nexport const shareMyScore = (score, level) => {\r\n\tif (navigator.share) {\r\n\t\tnavigator.share({\r\n\t\t\ttitle: `FlappyDirt`,\r\n\t\t\ttext: `Hey, I did ${score} on FlappyDirt! Can you beat me?`,\r\n\t\t\turl: 'https://alabacakmurat.github.io/flappydirt/',\r\n\t\t})\r\n\t\t\t.then(() => console.log('Successful share'))\r\n\t\t\t.catch((error) => console.log('Error sharing', error));\r\n\t}\r\n}\r\n\r\n\r\nexport const level = derived(score, $score => Math.ceil(Math.max($score, 1) / 5))\r\n// export const level = derived(score, $score => $score+1)","export default {\r\n\t'start_button': 'Başlat',\r\n\t'share_button': 'Paylaş',\r\n\t'restart_button': 'Yeniden başlat',\r\n\r\n\t'are_you_ready': 'Başlamaya hazır mısın?',\r\n\t'tip': 'İpucu',\r\n\t'tip_for_phone': 'Telefonda oynarken yan çevirmek daha iyi sonuçlar verir',\r\n\r\n\t'product_of_before': 'Bu bir',\r\n\t'product_of_after': 'ürünüdür',\r\n\r\n\t'score_result': 'Skor: {score}',\r\n\r\n\t'sensitivity': 'Hassasiyet ({sensitivity}%): ',\r\n\r\n\t'volume_text': 'Ses: {volume}',\r\n\t'score_text': 'Skor: {score}',\r\n\t'level_text': 'Seviye: {level}',\r\n\t\r\n\t'score_texts': {\r\n\t\t'zero': [\r\n\t\t\t'Denedin mi ki?',\r\n\t\t\t'Bu neydi şimdi?',\r\n\t\t\t'Hadi ama benim köpeğim bile 1 yapar ve benim köpeğim bile yok!',\r\n\t\t\t'Televizyonu aç ve bırak o oynasın',\r\n\t\t\t'Başlat\\'a basmadın mı n\\'aptın?',\r\n\t\t\t'İşte aradığım başlangıç',\r\n\t\t\t'İlk deneme için harikaydı (tabi ilk denemense?)',\r\n\t\t\t'Şaka değil dimi?',\r\n\t\t],\r\n\t\t'low': [\r\n\t\t\t'Olacak olacak DEWAMKE!',\r\n\t\t\t'Yani... Pratik yapmak iyi gelebilir',\r\n\t\t\t'Pratik yapmak geliştiriyor, denemeye devam!',\r\n\t\t\t'İyi deneme, bir sonrakinde geçebilir misin?',\r\n\t\t\t'Bundan iyisi dağda kayısı mıydı neydi o söz?',\r\n\t\t\t'Ben bundan yüksek yapmıştım',\r\n\t\t\t'Tavsiye lazım mı? Düşüyorken bağır!!',\r\n\t\t\t'Oynarken gülme, gülersen ölürsün',\r\n\t\t],\r\n\t\t'high': [\r\n\t\t\t'Söyleyecek bir şeyim yok! İnanılmazdı',\r\n\t\t\t'Harikaydı. Ben bile bu kadar iyi oynayamıyorum!',\r\n\t\t],\r\n\t\t'master': [\r\n\t\t\t'Sen ilah mısın? Tapalım mı sana?',\r\n\t\t\t'Artık benim Zeus\\'umsun',\r\n\t\t]\r\n\t}\r\n}","export default {\r\n\t'start_button': 'Start',\r\n\t'share_button': 'Share',\r\n\t'restart_button': 'Restart',\r\n\r\n\t'are_you_ready': 'Ready to start?',\r\n\t'tip': 'Tip',\r\n\t'tip_for_phone': 'It is better to play landscape mode if you\\'re on phone',\r\n\r\n\t'product_of_before': 'This is a product of',\r\n\t'product_of_after': '',\r\n\r\n\t'score_result': 'Score: {score}',\r\n\r\n\t'sensitivity': 'Sensitivity ({sensitivity}%): ',\r\n\r\n\t'volume_text': 'Volume: {volume}',\r\n\t'score_text': 'Score: {score}',\r\n\t'level_text': 'Level: {level}',\r\n\t\r\n\t'score_texts': {\r\n\t\t'zero': [\r\n\t\t\t'Did you even try?',\r\n\t\t\t'What was that?',\r\n\t\t\t'Come on! Even my dog can make it 1 (And I don\\'t even have a dog!)',\r\n\t\t\t'Turn the TV on and let it play',\r\n\t\t\t'Did you hit start or what?',\r\n\t\t\t'Perfect start',\r\n\t\t\t'That was a good start for the first try, if it is the first try',\r\n\t\t\t'No kidding?',\r\n\t\t],\r\n\t\t'low': [\r\n\t\t\t'Well.. I believe it takes practise',\r\n\t\t\t'Practise makes it perfect, keep trying',\r\n\t\t\t'Nice try buddy. Can you pass that?',\r\n\t\t\t'You can do better than this',\r\n\t\t\t'I did more than you did',\r\n\t\t\t'Do you need advice? Scream when it is falling!',\r\n\t\t\t'Don\\'t laugh. It will make you crash',\r\n\t\t],\r\n\t\t'high': [\r\n\t\t\t'I don\\'t have anything to say. That was incredible',\r\n\t\t\t'Amazing. Are you really a human?',\r\n\t\t],\r\n\t\t'master': [\r\n\t\t\t'You are a God. You know that, don\\'t you?'\r\n\t\t]\r\n\t}\r\n}","import { gameLang } from './props.js'\r\nimport {default as Turkish} from './lang/tr.js'\r\nimport {default as English} from './lang/en.js'\r\n\r\nlet $gameLang;\r\nexport function lang(key, props) {\r\n\tgameLang.subscribe(v => {$gameLang = v})\r\n\r\n\tif( $gameLang == 'tr' )\r\n\t\tvar line = Turkish[key] || '';\r\n\telse\r\n\t\tvar line = English[key] || '';\r\n\r\n\tif( typeof props == 'object' )\r\n\t{\r\n\t\tObject.keys(props).forEach(key => {\r\n\t\t\tline = line.replace('{'+key+'}', (props[key]))\r\n\t\t})\r\n\t}\r\n\r\n\treturn line\r\n} ","import { gameWidth, gameHeight, playerRadius, sensitivity, gameOverTrack } from './props.js'\r\n\r\nlet $gameHeight;\r\nlet $sensitivity;\r\nexport class Player {\r\n\tconstructor(context, image, x, y)\r\n\t{\r\n\t\tplayerRadius.subscribe(v => { this.radius = v })\r\n\t\tgameHeight.subscribe(v => { $gameHeight = v })\r\n\t\tsensitivity.subscribe(v => { $sensitivity = v })\r\n\r\n\r\n\t\tthis.context = context\r\n\t\tthis.image = image\r\n\t\tthis.x = x\r\n\t\tthis.y = y\r\n\t\tthis.crashed = false\r\n\t}\r\n\tupdate(volume) {\r\n\t\tlet breakpoint = 12\r\n\r\n\t\t// apply volume raise\r\n\t\tthis.y -= (volume - breakpoint) / 4\r\n\r\n\t\t// edge controls\r\n\t\tif( (this.y + (this.radius*2)) > $gameHeight )\r\n\t\t\tthis.y = $gameHeight- (this.radius*2)\r\n\t\telse if( this.y < 0 )\r\n\t\t\tthis.y = 0\r\n\r\n\t\tthis.draw()\r\n\t}\r\n\tdraw() {\r\n\t\t// this.image.onload = () => {\r\n\t\t// \tthis.context.drawImage(this.image, 0, 0, this.image.width, $gameHeight)\r\n\t\t// }\r\n\r\n\t\t// if( this.image.naturalWidth == 0 )\r\n\t\t// {\r\n\t\t\t// console.log(1)\r\n\t\t\tthis.context.drawImage(this.image, this.x, this.y, this.radius*2, this.radius*2)\r\n\t\t\t// this.context.strokeRect(this.x, this.y, this.radius*2, this.radius*2)\r\n\t\t// }\r\n\r\n\r\n\t\t// this.context.beginPath()\r\n\t\t// this.context.arc(this.x, this.y, this.radius, 0, 2 * Math.PI)\r\n\t\t// this.context.fillStyle = 'lightblue'\r\n\t\t// this.context.fill()\r\n\t\t// this.context.stroke()\r\n\t}\r\n\tcrash()\r\n\t{\r\n\t\tif( !this.crashed )\r\n\t\t{\r\n\t\t\tthis.crashed = true\r\n\r\n\t\t\tgameOverTrack().play()\r\n\t\t}\r\n\t}\r\n\tedges()\r\n\t{\r\n\t\treturn {\r\n\t\t\t'left': this.x,\r\n\t\t\t'right': this.x + (this.radius * 2),\r\n\t\t\t'top': this.y,\r\n\t\t\t'bottom': this.y + (this.radius * 2)\r\n\t\t}\r\n\r\n\t\t// return {\r\n\t\t// \t'left': this.x - this.radius,\r\n\t\t// \t'right': this.x + this.radius,\r\n\t\t// \t'top': this.y - this.radius,\r\n\t\t// \t'bottom': this.y + this.radius\r\n\t\t// }\r\n\t}\r\n}\r\n","import { gameWidth, gameHeight, playerRadius, score, level, blocks } from './props.js'\r\n\r\nlet $gameWidth\r\nlet $gameHeight\r\nlet $playerRadius\r\nlet $score\r\nlet $level\r\nlet lastBlockDeployedAt = Date.now()\r\nexport class Block {\r\n\tconstructor(context, _level, gap, width, height)\r\n\t{\r\n\t\tgameWidth.subscribe(v => { $gameWidth = v })\r\n\t\tgameHeight.subscribe(v => { $gameHeight = v })\r\n\t\tplayerRadius.subscribe(v => { $playerRadius = v})\r\n\t\tscore.subscribe(v => { $score = v})\r\n\t\tlevel.subscribe(v => { $level = v})\r\n\r\n\t\tif( !height )\r\n\t\t{\r\n\t\t\tlet percentage = Math.floor(Math.random() * 100) + 1\r\n\t\t\theight = Math.max(10, (($gameHeight / 2) * percentage) / 100)\r\n\t\t}\r\n\r\n\t\tthis.context = context\r\n\t\t// this.speed = ((10*1) + 0.6)\r\n\t\tthis.speed = (($level*0.4) +1.2)\r\n\t\tconsole.log($level)\r\n\t\t// this.speed = (1.8)\r\n\r\n\t\tthis.blockWidth = width || 100\r\n\t\tthis.blockGap = Math.max((this.gap || 0), this.calculateGap($level))\r\n\t\tthis.blockHeight = height || 50\r\n\r\n\t\t// re-arrange the height if it exceeds\r\n\t\tif( (this.blockHeight + this.blockGap) >= $gameHeight )\r\n\t\t{\r\n\t\t\tthis.blockHeight -= (this.blockHeight / 2)\r\n\t\t\t// this.blockHeight = $gameHeight - (this.blockHeight + this.blockGap) - 10\r\n\t\t}\r\n\r\n\t\tthis.xPosition = $gameWidth + 10\r\n\t\t// this.xPosition = $gameWidth / 2\r\n\t\tthis.topSpace = this.blockHeight + this.blockGap\r\n\r\n\t\tthis.dead = false\r\n\t\tthis.passed = false\r\n\r\n\t\tthis.prevBlock = false\r\n\t}\r\n\tupdate(player) {\r\n\r\n\t\t// // we'll deploy new block\r\n\t\t// let deploymentGap = (4000 - (($level-1) * 250));\r\n\t\t// // console.log(deploymentGap, (Date.now()-lastBlockDeployedAt))\r\n\t\t// // console.log(Date.now() - lastBlockDeployedAt)\r\n\t\t// if( (Date.now() - lastBlockDeployedAt) > deploymentGap  )\r\n\t\t// {\r\n\t\t// \tblocks.update(v => {\r\n\t\t// \t\tlet _block = new Block(this.context, this.level)\r\n\t\t// \t\tv.push( _block )\r\n\t\t// \t\treturn v\r\n\t\t// \t})\r\n\r\n\t\t// \tlastBlockDeployedAt = Date.now()\r\n\t\t// }\r\n\r\n\t\tlet playerEdges = player.edges()\r\n\t\tif( !this.dead && (this.xPosition + this.blockWidth) > 0 )\r\n\t\t{\r\n\t\t\tthis.xPosition -= this.speed\r\n\t\t\tthis.draw()\r\n\r\n\t\t\t// let's check if the player is behind us\r\n\t\t\tif( !this.passed && (this.xPosition + this.blockWidth) < playerEdges.right )\r\n\t\t\t{\r\n\t\t\t\tthis.passed = true\r\n\r\n\t\t\t\tscore.update(v => v+1)\r\n\t\t\t}\r\n\r\n\t\t\t// Is the player inside the block wrapper?\r\n\t\t\tif( playerEdges.right >= this.xPosition && playerEdges.left <= (this.xPosition+this.blockWidth) )\r\n\t\t\t{\r\n\t\t\t\t// The player is inside the wrapper\r\n\t\t\t\t// If it is outside the gap, it will crash\r\n\t\t\t\tif( playerEdges.top <= this.blockHeight || playerEdges.bottom >= this.topSpace )\r\n\t\t\t\t{\r\n\t\t\t\t\tplayer.crash()\r\n\t\t\t\t} \r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.dead = true\r\n\t\t}\r\n\t}\r\n\tdraw() {\r\n\t\tthis.context.fillStyle = 'darkgreen'\r\n\t\t// create the top block in the middle of the game\r\n\t\tthis.context.fillRect(this.xPosition, 0, this.blockWidth, this.blockHeight)\r\n\t\t// create the derived bottom block\r\n\t\t// starting pos = topBlockHeight + gap\r\n\t\t// height = gameHeight - (topBlockHeight + gap)\r\n\t\tlet bottomBlockHeight = $gameHeight - this.topSpace\r\n\t\tthis.context.fillRect(this.xPosition, this.topSpace, this.blockWidth, bottomBlockHeight)\r\n\t}\r\n\tcalculateGap(level)\r\n\t{\r\n\t\treturn  ($playerRadius * 1.25) + (($playerRadius*7) - (($level - 1) * ($playerRadius/2.5)))\r\n\t}\r\n}\r\n","export default function Timer(fn, t) {\r\n    var timerObj = setInterval(fn, t);\r\n\r\n    this.stop = function() {\r\n        if (timerObj) {\r\n            clearInterval(timerObj);\r\n            timerObj = null;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    // start timer using current settings (if it's not already running)\r\n    this.start = function() {\r\n        if (!timerObj) {\r\n            this.stop();\r\n            timerObj = setInterval(fn, t);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    // start with new or original interval, stop current interval\r\n    this.reset = function(newT = t) {\r\n        t = newT;\r\n        return this.stop().start();\r\n    }\r\n}","import { gameWidth, gameHeight } from './props.js'\r\n\r\nlet $gameWidth;\r\nlet $gameHeight;\r\nexport class Text {\r\n\tconstructor(context, x, y, text, color, font)\r\n\t{\r\n\t\tthis.context = context\r\n\t\tthis.x = x\r\n\t\tthis.y = y\r\n\t\tthis.font = font || '14px Georgia'\r\n\t\tthis.text = text || ''\r\n\t\tthis.color = color || 'black'\r\n\r\n\t\tgameWidth.subscribe(v => { $gameWidth = v })\r\n\t\tgameHeight.subscribe(v => { $gameHeight = v })\r\n\t}\r\n\tupdate(text) {\r\n\t\tif( text )\r\n\t\t\tthis.text = text\r\n\t\t\r\n\t\tthis.draw()\r\n\t}\r\n\tdraw() {\r\n\t\tthis.context.font = this.font;\r\n\t\tthis.context.fillStyle = this.color;\r\n\t\tthis.context.fillText(this.text, this.x, this.y);\r\n\t}\r\n}\r\n","<script>\r\n\timport { onMount } from 'svelte'\r\n\timport { gameWidth, gameHeight, volumeCoefficient, sensitivity as sensitivityStore, score, level, blocks, pixelRatio, canShare, shareMyScore, gameLang }\r\n\t\tfrom './props.js'\r\n\r\n\timport { lang as Translator } from './lang.js'\r\n\r\n\timport Timer from './Timer.js'\r\n\timport { Player } from './Player.js'\r\n\timport { Text } from './Text.js'\r\n\timport { Block } from './Block.js'\r\n\r\n\t// export let width\r\n\t// export let height\r\n\tlet width\r\n\tlet height\r\n\t\r\n\tlet canvas\r\n\tlet startScreen\r\n\tlet crashScreen\r\n\tlet startButton\r\n\tlet restartButton\r\n\t$: sensitivity = $sensitivityStore\r\n\tlet meter\r\n\tlet audioContext\r\n\tlet mediaStreamSource\r\n\tlet recycle\r\n\tlet lastBlockDeployedAt\r\n\r\n\t$: lang = (a,b,c,d,e,f,g) => {\r\n\t\t// we'll use $game lang here to update\r\n\t\t$gameLang;\r\n\t\t\r\n\t\t// the original translator\r\n\t\treturn Translator(a,b,c,d,e,f,g)\r\n\t}\r\n\r\n\tlet crashScreenScoreText =  'Come on! Try again'\r\n\r\n\tlet mount = () => {\r\n\t\t// create canvas context\r\n\t\tlet context = canvas.getContext('2d')\r\n\r\n\t\t// update gameWidth and gameHeight\r\n\t\tpixelRatio.set(window.devicePixelRatio)\r\n\t\tgameWidth.set(width)\r\n\t\tgameHeight.set(height)\r\n\r\n\t\tlet volumeText \t= new Text(context, 10, 20, lang('volume_text', {'volume': 0}) )\r\n\t\tlet scoreText \t= new Text(context, 100, 20, lang('score_text', {'score': $score}))\r\n\t\tlet levelText \t= new Text(context, 170, 20, lang('level_text', {'level': $level}))\r\n\t\t\r\n\t\tlet backgroundImage = new Image(); \r\n\t\tbackgroundImage.src = './dirtbg.png';\r\n\t\t\r\n\t\tlet dirtImage = new Image(); \r\n\t\tdirtImage.src = './dirt.png';\r\n\t\t\r\n\t\t// Push a player\r\n\t\tlet player  \t= new Player(context, dirtImage, width / 10, height / 2)\r\n\t\t\r\n\t\tblocks.set([\r\n\t\t\t// new Block(context, $level)\r\n\t\t])\r\n\r\n\t\t// we'll deploy new block\r\n\t\tlet deploymentGap = (4000 - (($level-1) * 250));\r\n\t\t// console.log(deploymentGap, (Date.now()-lastBlockDeployedAt))\r\n\t\t// console.log(Date.now() - lastBlockDeployedAt)\r\n\t\tsetInterval(() => {\r\n\t\t\tif( !lastBlockDeployedAt || (Date.now() - lastBlockDeployedAt) > deploymentGap  )\r\n\t\t\t{\r\n\t\t\t\tblocks.update(v => {\r\n\t\t\t\t\tlet _block = new Block(context, $level)\r\n\t\t\t\t\tv.push( _block )\r\n\t\t\t\t\treturn v\r\n\t\t\t\t})\r\n\r\n\t\t\t\tlastBlockDeployedAt = Date.now()\r\n\t\t\t}\r\n\t\t}, 100)\r\n\r\n\t\t// Animate-recycle\r\n\t\trecycle = new Timer(async function(){\r\n\r\n\t\t\t// update gameWidth and gameHeight\r\n\t\t\tpixelRatio.set(window.devicePixelRatio)\r\n\t\t\tgameWidth.set(width / 1)\r\n\t\t\tgameHeight.set(height / 1)\r\n\t\t\t// gameWidth.set(width / ($pixelRatio))\r\n\t\t\t// gameHeight.set(height / ($pixelRatio))\r\n\r\n\t\t\t// let volume = (meter ? meter.volume : 0) * $volumeCoefficient * ((($sensitivityStore+100.1) / 90)),\r\n\t\t\tlet meterVolume = (meter ? meter.volume : 0) * $volumeCoefficient,\r\n\t\t\t\t// sensitivityCoefficient = (sensitivity / 10),\r\n\t\t\t\tsensitivityCoefficient = 1 + (sensitivity / 200),\r\n\t\t\t\tvolume = Math.min(25, meterVolume) * sensitivityCoefficient,\r\n\t\t\t\tvolumeMeter = volume.toFixed(1)\r\n\t\t\t\r\n\t\t\t// Clear the canvas\r\n\t\t\tcontext.clearRect(0, 0, width, height)\r\n\t\t\tawait drawImg(context, backgroundImage);\r\n\r\n\t\t\t// Block\r\n\t\t\tlet _blocks = [];\r\n\t\t\tblocks.subscribe(v => { _blocks = v })\r\n\t\t\t_blocks.forEach(block => {\r\n\t\t\t\tblock.update(player)\r\n\t\t\t})\r\n\r\n\t\t\t// Update & draw the player\r\n\t\t\tplayer.update(volume)\r\n\r\n\t\t\t// \r\n\t\t\t// volumeText.update(`Volume: ${volumeMeter}`)\r\n\t\t\t// scoreText.update(`Score: ${$score}`)\r\n\t\t\t// levelText.update(`Level: ${$level}`)\r\n\r\n\t\t\tvolumeText.update( lang('volume_text', {'volume': volumeMeter})  );\r\n\t\t\tscoreText.update( lang('score_text', {'score': $score}) );\r\n\t\t\tlevelText.update( lang('level_text', {'level': $level}) );\r\n\r\n\t\t\t// Did it crash?\r\n\t\t\tcrashScreenScoreText = getCrashScreenScoreText()\r\n\r\n\t\t\tif( player.crashed )\r\n\t\t\t{\r\n\t\t\t\tcrashScreen.style.display = 'flex'\r\n\r\n\t\t\t\trecycle.stop()\r\n\t\t\t}\r\n\t\t}, 1000 / 60)\r\n\t};\r\n\t\r\n\tfunction setGameLang(to)\r\n\t{\r\n\t\tto = to == 'tr' ? 'tr' : 'en';\r\n \t\tgameLang.set(to)\r\n\r\n \t\t// hide the lang changers\r\n \t\t// document.querySelectorAll('.lang-changer').forEach(e => {\r\n\t\t\t// if( e.classList.contains('lang-changer-' + to) )\r\n\t\t\t// \te.style.display = 'none'\r\n\t\t\t// else\r\n\t\t\t// \te.style.display = 'inline-block'\r\n \t\t// })\r\n\t}\r\n\tfunction startGame()\r\n\t{\r\n\t\t// Initiate mounting\r\n\t\tmount()\r\n\r\n\t\t// remove the start button\r\n\t\tstartScreen.style.display = 'none'\r\n\t\taudioContext.resume()\r\n\t}\r\n\tfunction restartGame()\r\n\t{\r\n\t\t// \r\n\t\tcrashScreen.style.display = 'none'\r\n\t\t\r\n\t\t// update the score\r\n\t\tscore.set(0)\r\n\r\n\t\tmount()\r\n\t}\r\n\tfunction handleDomReady() {\r\n\t\t// create audio context\r\n\t\twindow.AudioContext = window.AudioContext || window.webkitAudioContext;\r\n\r\n\t\t// grab an audio context\r\n\t\taudioContext = new AudioContext();\r\n\t\tgetAudio()\r\n\t\thandleGameSizes()\r\n\t}\r\n\r\n\tfunction handleDomResize()\r\n\t{\r\n\t\thandleGameSizes()\r\n\t}\r\n\r\n\tfunction handleSensitivity()\r\n\t{\r\n\t\tsensitivity = Math.max(1, Math.min(100, sensitivity))\r\n\t\tsensitivityStore.set(sensitivity)\r\n\t}\r\n\r\n\tfunction handleGameSizes()\r\n\t{\r\n\t\t// ratio 8:1\r\n\t\twidth = window.innerWidth / 1.3\r\n\t\theight = width / 2.5\r\n\t}\r\n\r\n\tfunction getAudio() {\r\n\t\ttry {\r\n\t\t\t// monkeypatch getUserMedia\r\n\t\t\t// navigator.getUserMedia = \r\n\t\t\t// \tnavigator.getUserMedia ||\r\n\t\t\t// \tnavigator.webkitGetUserMedia ||\r\n\t\t\t// \tnavigator.mozGetUserMedia;\r\n\r\n\t\t\tnavigator.mediaDevices.getUserMedia({\r\n\t\t\t\t\"audio\": {\r\n\t\t\t\t\t\"mandatory\": {\r\n\t\t\t\t\t\t\"googEchoCancellation\": \"false\",\r\n\t\t\t\t\t\t\"googAutoGainControl\": \"false\",\r\n\t\t\t\t\t\t\"googNoiseSuppression\": \"false\",\r\n\t\t\t\t\t\t\"googHighpassFilter\": \"false\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"optional\": []\r\n\t\t\t\t}\r\n\t\t\t}).then(gotStream, () => { alert('We can\\'t reach your microphone') });\r\n\r\n\t\t\t// ask for an audio input\r\n\t\t\t// navigator.getUserMedia = ( navigator.getUserMedia ||\r\n\t //                     navigator.webkitGetUserMedia ||\r\n\t //                     navigator.mozGetUserMedia ||\r\n\t //                     navigator.msGetUserMedia);\r\n\t\t\t// navigator.getUserMedia(\r\n\t\t\t// {\r\n\t\t\t// \t\"audio\": {\r\n\t\t\t// \t\t\"mandatory\": {\r\n\t\t\t// \t\t\t\"googEchoCancellation\": \"false\",\r\n\t\t\t// \t\t\t\"googAutoGainControl\": \"false\",\r\n\t\t\t// \t\t\t\"googNoiseSuppression\": \"false\",\r\n\t\t\t// \t\t\t\"googHighpassFilter\": \"false\"\r\n\t\t\t// \t\t},\r\n\t\t\t// \t\t\"optional\": []\r\n\t\t\t// \t},\r\n\t\t\t// }, gotStream, () => { console.log('Couldn\\'t get stream') });\r\n\t\t} catch (e) {\r\n\t\t\talert('getUserMedia threw exception 1 :' + e);\r\n\t\t}\r\n\t}\r\n\tfunction gotStream(stream) {\r\n\t\t// Create an AudioNode from the stream.\r\n\t\tmediaStreamSource = audioContext.createMediaStreamSource(stream);\r\n\r\n\t\t// Create a new volume meter and connect it.\r\n\t\tmeter = window.createAudioMeter(audioContext);\r\n\t\tmediaStreamSource.connect(meter);\r\n\t}\r\n\r\n\t\r\n\r\n\t// fake reactivity by $score\r\n\tfunction getCrashScreenScoreText()\r\n\t{\r\n\t\tlet scoreTexts = lang('score_texts')\r\n\r\n\t\tif( $score <= 0 )\r\n\t\t\treturn scoreTexts.zero[Math.floor(Math.random() * scoreTexts.zero.length)];\r\n\t\telse if( $level <= 3 )\r\n\t\t\treturn scoreTexts.low[Math.floor(Math.random() * scoreTexts.low.length)];\r\n\t\telse if( $level <= 6 )\r\n\t\t\treturn scoreTexts.high[Math.floor(Math.random() * scoreTexts.high.length)];\r\n\t\telse\r\n\t\t\treturn scoreTexts.master[Math.floor(Math.random() * scoreTexts.master.length)];\r\n\t}\r\n\r\n\tasync function drawImg(context, image) {\r\n\t\treturn new Promise(resolve => {\r\n\t\t\timage.onload = function () {\r\n\t\t\t\tcontext.drawImage(image, 0, 0, image.width, $gameHeight);\r\n\t\t\t\tresolve(true);\r\n\t\t\t} \r\n\r\n\t\t\tif( image.naturalWidth != 0 )\r\n\t\t\t{\r\n\t\t\t\tcontext.drawImage(image, 0, 0, $gameWidth, $gameHeight+10);\r\n\t\t\t\tresolve(true)\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n</script>\r\n\r\n<style>\r\n\t:global(body) {\r\n\t\tbackground: #222;\r\n\t\tcolor: #EEE;\r\n\t\tuser-select: none;\r\n\t}\r\n\t#canvas-area {\r\n\t\t/*position: relative;*/\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\tbackground: #222;\r\n\t\tcolor: #EEE;\r\n\t}\r\n\r\n\t#playground {\r\n\t\tborder: 1px solid #000;\r\n\t\tbackground: #222;\r\n\t\tcolor: #EEE;\r\n\t\tmargin: 0 auto;\r\n\t}\r\n\t#start-button {\r\n\t\tfont-size: 1.3rem;\r\n\t\tpadding: 0.8rem 1.4rem;\r\n\t\tcursor: pointer;\r\n\t}\r\n\t#sensitivity {\r\n\t\t/*position: absolute;*/\r\n\t\tmargin-top: 10px;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\twhite-space: nowrap;\r\n\t}\r\n\t#sensitivity div {\r\n\t\tmargin-right: 1rem;\r\n\t}\r\n\t#start-screen {\r\n\t\tposition: fixed;\r\n\t\tbackground: rgba(000, 000, 000, 0.7);\r\n\t\tcolor: #FFF;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\ttop: 0; bottom: 0;\r\n\t\tleft: 0; right: 0;\r\n\t\ttext-align: center;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t}\r\n\t#start-screen .emoji {\r\n\t\tfont-size: 3rem;\r\n\t\tfont-weight: normal;\r\n\t\tmargin-bottom: 0.8rem;\r\n\t}\r\n\t#start-screen .message {\r\n\t\tfont-size: 1.2rem;\r\n\t\tfont-weight: normal;\r\n\t\tfont-style: italic;\r\n\t\tmargin-bottom: 3rem;\r\n\t}\r\n\t#crash-screen {\r\n\t\tposition: fixed;\r\n\t\tbackground: rgba(000, 000, 000, 0.7);\r\n\t\tcolor: #FFF;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\ttop: 0; bottom: 0;\r\n\t\tleft: 0; right: 0;\r\n\t\ttext-align: center;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tdisplay: none;\r\n\t}\r\n\t#crash-screen .message {\r\n\t\tfont-size: 1.2rem;\r\n\t\tfont-weight: normal;\r\n\t\tfont-style: italic;\r\n\t\tmargin-bottom: 0.8rem;\r\n\t}\r\n\t#crash-screen .score {\r\n\t\tfont-size: 2rem;\r\n\t\tfont-weight: bold;\r\n\t}\r\n\t#crash-screen #restart-button {\r\n\t\tfont-size: 1.5rem;\r\n\t\tmargin-top: 2rem;\r\n\t\tfont-weight: bold;\r\n\t\tpadding: 0.8rem 1.4rem;\r\n\t\tcursor: pointer;\r\n\t}\r\n\t\r\n\th1#title {\r\n\t\tmargin-bottom: 0;\r\n\t}\r\n\t#link-area {\r\n\t\tfont-size: 0.8rem; text-align: center; font-style: italic; margin-top: 5px; margin-bottom: 10px\r\n\t}\r\n\t#link {\r\n\t\tfont-style:normal;font-weight:bold; color: #eee; text-decoration: none !important\r\n\t}\r\n\t#ma-text {\r\n\t\tbackground-color:#D32F2F; color:#FFF;padding:0 4px\r\n\t}\r\n\r\n\r\n\t.slider {\r\n\t\t-webkit-appearance: none;\r\n\t\twidth: 100%;\r\n\t\theight: 25px;\r\n\t\tbackground: #d3d3d3;\r\n\t\toutline: none;\r\n\t\topacity: 0.7;\r\n\t\t-webkit-transition: .2s;\r\n\t\ttransition: opacity .2s;\r\n\t}\r\n\r\n\t.slider:hover {\r\n\t\topacity: 1;\r\n\t}\r\n\r\n\t.slider::-webkit-slider-thumb {\r\n\t\t-webkit-appearance: none;\r\n\t\tappearance: none;\r\n\t\twidth: 25px;\r\n\t\theight: 25px;\r\n\t\tbackground: #4CAF50;\r\n\t\tcursor: pointer;\r\n\t}\r\n\r\n\t.slider::-moz-range-thumb {\r\n\t\twidth: 25px;\r\n\t\theight: 25px;\r\n\t\tbackground: #4CAF50;\r\n\t\tcursor: pointer;\r\n\t}\r\n\r\n\r\n\t.lang-changers {\r\n\t\tmargin-top: 1.4rem;\r\n\t}\r\n\r\n\t.lang-changers .lang-changer {\r\n\t\tcolor: #EEE;\r\n\t\tfont-size: 1.1rem;\r\n\t\tmargin: 0 0.4rem;\r\n\t}\r\n\r\n\r\n\t.lang-changers-2 {\r\n\t\tmargin-left: 1.4rem;\r\n\t}\r\n\r\n\t.lang-changers-2 .lang-changer {\r\n\t\tcolor: #EEE;\r\n\t\tfont-size: 1.1rem;\r\n\t\tmargin: 0 0.4rem;\r\n\t}\r\n</style>\r\n<svelte:head>\r\n\t<title>FlappyDirt 💩 v0.907 - MALab [muratalabacak.com]</title>\r\n</svelte:head>\r\n<svelte:window on:resize={handleDomResize} on:load={handleDomReady}/>\r\n\r\n<div id=\"canvas-area\">\r\n\t\r\n\t<h1 id=\"title\">FlappyDirt</h1>\r\n\t<div id=\"link-area\">\r\n\t\t{lang('product_of_before')}\r\n\t\t\t<a href=\"http://muratalabacak.com\" target=\"_blank\" id=\"link\"><span id=\"ma-text\">MA</span>Lab</a>\r\n\t\t{lang('product_of_after')}\r\n\t</div>\r\n\r\n\r\n\t<canvas\r\n\t\tid=\"playground\"\r\n\t\tbind:this={canvas}\r\n\t\twidth={width}\r\n\t\theight={height}\r\n\t/>\r\n\t<div id=\"start-screen\" bind:this={startScreen}>\r\n\t\t<div class=\"emoji\">\r\n\t\t\t{lang('are_you_ready')}\r\n\t\t</div>\r\n\t\t<div class=\"message\">\r\n\t\t\t<strong>{lang('tip')}:</strong> {lang('tip_for_phone')} \r\n\t\t</div>\r\n\t\t<button id=\"start-button\" on:click={startGame} bind:this={startButton}>\r\n\t\t\t{lang('start_button')}\r\n\t\t</button>\r\n\t\t<div class=\"lang-changers\">\r\n\t\t\t{#if $gameLang == 'tr'}\r\n\t\t\t\t<a href=\"#lang:en\" class=\"lang-changer lang-changer-en\" on:click={() => { setGameLang('en') }}>\r\n\t\t\t\t\tEnglish\r\n\t\t\t\t</a>\r\n\t\t\t{:else}\r\n\t\t\t\t<a href=\"#lang:tr\" class=\"lang-changer lang-changer-tr\" on:click={() => { setGameLang('tr') }}>\r\n\t\t\t\t\tTürkçe\r\n\t\t\t\t</a>\r\n\t\t\t{/if}\r\n\t\t</div>\r\n\t</div>\r\n\t<div id=\"sensitivity\" style=\"bottom: -50px\">\r\n\t\t<div>{lang('sensitivity', {'sensitivity': sensitivity})}</div>\r\n\t\t<input min=\"1\" max=\"100\" type=\"range\" class=\"slider\" on:input={handleSensitivity} bind:value={sensitivity}>\r\n\r\n\r\n\t\t<div class=\"lang-changers-2\">\r\n\t\t\t{#if $gameLang == 'tr'}\r\n\t\t\t\t<a href=\"#lang:en\" class=\"lang-changer lang-changer-en\" on:click={() => { setGameLang('en') }}>\r\n\t\t\t\t\tEnglish\r\n\t\t\t\t</a>\r\n\t\t\t{:else}\r\n\t\t\t\t<a href=\"#lang:tr\" class=\"lang-changer lang-changer-tr\" on:click={() => { setGameLang('tr') }}>\r\n\t\t\t\t\tTürkçe\r\n\t\t\t\t</a>\r\n\t\t\t{/if}\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<div id=\"crash-screen\" bind:this={crashScreen}>\r\n\t\t<div class=\"message\">\r\n\t\t\t{crashScreenScoreText}\r\n\t\t</div>\r\n\t\t<div class=\"score\">\r\n\t\t\t{lang('score_result', {'score': $score})}\r\n\t\t</div>\r\n\r\n\t\t<button id=\"restart-button\" on:click={restartGame} bind:this={restartButton}>\r\n\t\t\t{lang('restart_button')}\r\n\t\t</button>\r\n\t\t{#if canShare()}\r\n\t\t\t<button on:click={() => { shareMyScore($score) }}>\r\n\t\t\t\t{lang('share_button')}\r\n\t\t\t</button>\r\n\t\t{/if}\r\n\r\n\r\n\t\t<div class=\"lang-changers\">\r\n\t\t\t{#if $gameLang == 'tr'}\r\n\t\t\t\t<a href=\"#lang:en\" class=\"lang-changer lang-changer-en\" on:click={() => { setGameLang('en') }}>\r\n\t\t\t\t\tEnglish\r\n\t\t\t\t</a>\r\n\t\t\t{:else}\r\n\t\t\t\t<a href=\"#lang:tr\" class=\"lang-changer lang-changer-tr\" on:click={() => { setGameLang('tr') }}>\r\n\t\t\t\t\tTürkçe\r\n\t\t\t\t</a>\r\n\t\t\t{/if}\r\n\t\t</div>\r\n\t</div>\r\n</div>","<script>\n\texport let GAME_WIDTH;\n\texport let GAME_HEIGHT;\n\n\timport Playground from './Playground.svelte' \n</script>\n\n<Playground width={GAME_WIDTH} height={GAME_HEIGHT} />","import App from './App.svelte';\n\nwindow.createAudioMeter = function(audioContext,clipLevel,averaging,clipLag) {\n\tvar processor = audioContext.createScriptProcessor(512);\n\tprocessor.onaudioprocess = volumeAudioProcess;\n\tprocessor.clipping = false;\n\tprocessor.lastClip = 0;\n\tprocessor.volume = 0;\n\tprocessor.clipLevel = clipLevel || 0.98;\n\tprocessor.averaging = averaging || 0.95;\n\tprocessor.clipLag = clipLag || 750;\n\n\t// this will have no effect, since we don't copy the input to the output,\n\t// but works around a current Chrome bug.\n\tprocessor.connect(audioContext.destination);\n\n\tprocessor.checkClipping =\n\t\tfunction() {\n\t\t\tif (!this.clipping)\n\t\t\t\treturn false;\n\t\t\tif ((this.lastClip + this.clipLag) < window.performance.now())\n\t\t\t\tthis.clipping = false;\n\t\t\treturn this.clipping;\n\t\t};\n\n\tprocessor.shutdown =\n\t\tfunction() {\n\t\t\tthis.disconnect();\n\t\t\tthis.onaudioprocess = null;\n\t\t};\n\n\treturn processor;\n}\n\nwindow.volumeAudioProcess = function( event ) {\n\tvar buf = event.inputBuffer.getChannelData(0);\n    var bufLength = buf.length;\n\tvar sum = 0;\n    var x;\n\n\t// Do a root-mean-square on the samples: sum up the squares...\n    for (var i=0; i<bufLength; i++) {\n    \tx = buf[i];\n    \tif (Math.abs(x)>=this.clipLevel) {\n    \t\tthis.clipping = true;\n    \t\tthis.lastClip = window.performance.now();\n    \t}\n    \tsum += x * x;\n    }\n\n    var rms =  Math.sqrt(sum / bufLength);\n\n    // Now smooth this out with the averaging factor applied\n    // to the previous sample - take the max here because we\n    // want \"fast attack, slow release.\"\n    this.volume = Math.max(rms, this.volume*this.averaging);\n}\n\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\t// GAME_WIDTH: 800,\n\t\t// GAME_HEIGHT: 300\n\t\tGAME_WIDTH: window.innerWidth / 1.5,\n\t\tGAME_HEIGHT: window.innerHeight / 1.5,\n\t}\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","set_input_value","input","current_component","set_current_component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","i","length","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","transition_in","block","local","delete","globals","window","globalThis","global","mount_component","on_mount","m","new_on_destroy","map","filter","destroy_component","detaching","d","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","c","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","s","invalidate","subscriber","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","result","unsubscribers","gameLang","pixelRatio","devicePixelRatio","score","blocks","gameWidth","innerWidth","gameHeight","innerHeight","volumeCoefficient","sensitivity","playerRadius","$gameWidth","level","$score","Math","ceil","max","start_button","share_button","restart_button","are_you_ready","tip","tip_for_phone","product_of_before","product_of_after","score_result","volume_text","score_text","level_text","score_texts","zero","low","high","master","$gameLang","$gameHeight","$playerRadius","$level","lang","key","v","line","Turkish","English","keys","replace","Timer","t","timerObj","setInterval","clearInterval","reset","newT","Player","image","x","y","radius","crashed","volume","draw","drawImage","Audio","play","left","right","top","bottom","Text","color","font","fillStyle","fillText","Block","_level","gap","width","height","percentage","floor","random","speed","console","log","blockWidth","blockGap","calculateGap","blockHeight","xPosition","topSpace","dead","passed","prevBlock","player","playerEdges","edges","crash","fillRect","bottomBlockHeight","navigator","important","style","setProperty","canvas","startScreen","crashScreen","startButton","restartButton","meter","audioContext","mediaStreamSource","recycle","lastBlockDeployedAt","crashScreenScoreText","mount","getContext","volumeText","scoreText","levelText","backgroundImage","Image","src","dirtImage","deploymentGap","Date","now","_block","meterVolume","$volumeCoefficient","sensitivityCoefficient","min","volumeMeter","toFixed","clearRect","drawImg","_blocks","getCrashScreenScoreText","display","setGameLang","to","handleGameSizes","getAudio","mediaDevices","getUserMedia","audio","mandatory","googEchoCancellation","googAutoGainControl","googNoiseSuppression","googHighpassFilter","optional","gotStream","alert","e","stream","createMediaStreamSource","createAudioMeter","connect","scoreTexts","onload","naturalWidth","$sensitivityStore","f","g","Translator","resume","AudioContext","webkitAudioContext","sensitivityStore","undefined","share","title","url","catch","error","shareMyScore","o","outros","GAME_WIDTH","GAME_HEIGHT","clipLevel","averaging","clipLag","processor","createScriptProcessor","onaudioprocess","volumeAudioProcess","clipping","lastClip","destination","checkClipping","performance","shutdown","disconnect","buf","inputBuffer","getChannelData","bufLength","sum","abs","rms","sqrt","body"],"mappings":"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"}